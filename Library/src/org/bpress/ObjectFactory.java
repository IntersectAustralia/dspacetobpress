//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.02 at 02:45:47 PM EST 
//


package org.bpress;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.bpress package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _HtmlMarkupTypeSub_QNAME = new QName("", "sub");
    private final static QName _HtmlMarkupTypeU_QNAME = new QName("", "u");
    private final static QName _HtmlMarkupTypeB_QNAME = new QName("", "b");
    private final static QName _HtmlMarkupTypeStrong_QNAME = new QName("", "strong");
    private final static QName _HtmlMarkupTypeA_QNAME = new QName("", "a");
    private final static QName _HtmlMarkupTypeP_QNAME = new QName("", "p");
    private final static QName _HtmlMarkupTypeImg_QNAME = new QName("", "img");
    private final static QName _HtmlMarkupTypeEm_QNAME = new QName("", "em");
    private final static QName _HtmlMarkupTypeSup_QNAME = new QName("", "sup");
    private final static QName _HtmlMarkupTypeBr_QNAME = new QName("", "br");
    private final static QName _HtmlMarkupTypeI_QNAME = new QName("", "i");
    private final static QName _DocumentsDocumentFieldsFieldValue_QNAME = new QName("", "value");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.bpress
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Documents.Document.Authors }
     * 
     */
    public Documents.Document.Authors createDocumentsDocumentAuthors() {
        return new Documents.Document.Authors();
    }

    /**
     * Create an instance of {@link ExcelHtmlMarkupType }
     * 
     */
    public ExcelHtmlMarkupType createExcelHtmlMarkupType() {
        return new ExcelHtmlMarkupType();
    }

    /**
     * Create an instance of {@link Documents.Document.Keywords }
     * 
     */
    public Documents.Document.Keywords createDocumentsDocumentKeywords() {
        return new Documents.Document.Keywords();
    }

    /**
     * Create an instance of {@link HtmlMarkupType }
     * 
     */
    public HtmlMarkupType createHtmlMarkupType() {
        return new HtmlMarkupType();
    }

    /**
     * Create an instance of {@link Documents.Document.Fields.Field }
     * 
     */
    public Documents.Document.Fields.Field createDocumentsDocumentFieldsField() {
        return new Documents.Document.Fields.Field();
    }

    /**
     * Create an instance of {@link Documents.Document.Contributors }
     * 
     */
    public Documents.Document.Contributors createDocumentsDocumentContributors() {
        return new Documents.Document.Contributors();
    }

    /**
     * Create an instance of {@link ExcelDateTimeType }
     * 
     */
    public ExcelDateTimeType createExcelDateTimeType() {
        return new ExcelDateTimeType();
    }

    /**
     * Create an instance of {@link ExcelDecimalType }
     * 
     */
    public ExcelDecimalType createExcelDecimalType() {
        return new ExcelDecimalType();
    }

    /**
     * Create an instance of {@link ExcelIntegerType }
     * 
     */
    public ExcelIntegerType createExcelIntegerType() {
        return new ExcelIntegerType();
    }

    /**
     * Create an instance of {@link Documents.Document.Fields }
     * 
     */
    public Documents.Document.Fields createDocumentsDocumentFields() {
        return new Documents.Document.Fields();
    }

    /**
     * Create an instance of {@link Documents.Document.Disciplines }
     * 
     */
    public Documents.Document.Disciplines createDocumentsDocumentDisciplines() {
        return new Documents.Document.Disciplines();
    }

    /**
     * Create an instance of {@link ExcelDateType }
     * 
     */
    public ExcelDateType createExcelDateType() {
        return new ExcelDateType();
    }

    /**
     * Create an instance of {@link Documents.Document.SubjectAreas }
     * 
     */
    public Documents.Document.SubjectAreas createDocumentsDocumentSubjectAreas() {
        return new Documents.Document.SubjectAreas();
    }

    /**
     * Create an instance of {@link HtmlMarkupType.A }
     * 
     */
    public HtmlMarkupType.A createHtmlMarkupTypeA() {
        return new HtmlMarkupType.A();
    }

    /**
     * Create an instance of {@link Individual }
     * 
     */
    public Individual createIndividual() {
        return new Individual();
    }

    /**
     * Create an instance of {@link HtmlMarkupType.Br }
     * 
     */
    public HtmlMarkupType.Br createHtmlMarkupTypeBr() {
        return new HtmlMarkupType.Br();
    }

    /**
     * Create an instance of {@link Documents }
     * 
     */
    public Documents createDocuments() {
        return new Documents();
    }

    /**
     * Create an instance of {@link Corporate }
     * 
     */
    public Corporate createCorporate() {
        return new Corporate();
    }

    /**
     * Create an instance of {@link AuthorName }
     * 
     */
    public AuthorName createAuthorName() {
        return new AuthorName();
    }

    /**
     * Create an instance of {@link ExcelBooleanType }
     * 
     */
    public ExcelBooleanType createExcelBooleanType() {
        return new ExcelBooleanType();
    }

    /**
     * Create an instance of {@link ExcelURIType }
     * 
     */
    public ExcelURIType createExcelURIType() {
        return new ExcelURIType();
    }

    /**
     * Create an instance of {@link ExcelStringType }
     * 
     */
    public ExcelStringType createExcelStringType() {
        return new ExcelStringType();
    }

    /**
     * Create an instance of {@link Documents.Document.Advisors }
     * 
     */
    public Documents.Document.Advisors createDocumentsDocumentAdvisors() {
        return new Documents.Document.Advisors();
    }

    /**
     * Create an instance of {@link Documents.Document }
     * 
     */
    public Documents.Document createDocumentsDocument() {
        return new Documents.Document();
    }

    /**
     * Create an instance of {@link ExcelDisciplineType }
     * 
     */
    public ExcelDisciplineType createExcelDisciplineType() {
        return new ExcelDisciplineType();
    }

    /**
     * Create an instance of {@link HtmlMarkupType.Img }
     * 
     */
    public HtmlMarkupType.Img createHtmlMarkupTypeImg() {
        return new HtmlMarkupType.Img();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "sub", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeSub(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeSub_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "u", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeU(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeU_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "b", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeB(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeB_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "strong", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeStrong(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeStrong_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType.A }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "a", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType.A> createHtmlMarkupTypeA(HtmlMarkupType.A value) {
        return new JAXBElement<HtmlMarkupType.A>(_HtmlMarkupTypeA_QNAME, HtmlMarkupType.A.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "p", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeP(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeP_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType.Img }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "img", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType.Img> createHtmlMarkupTypeImg(HtmlMarkupType.Img value) {
        return new JAXBElement<HtmlMarkupType.Img>(_HtmlMarkupTypeImg_QNAME, HtmlMarkupType.Img.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "em", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeEm(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeEm_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "sup", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeSup(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeSup_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType.Br }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "br", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType.Br> createHtmlMarkupTypeBr(HtmlMarkupType.Br value) {
        return new JAXBElement<HtmlMarkupType.Br>(_HtmlMarkupTypeBr_QNAME, HtmlMarkupType.Br.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HtmlMarkupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "i", scope = HtmlMarkupType.class)
    public JAXBElement<HtmlMarkupType> createHtmlMarkupTypeI(HtmlMarkupType value) {
        return new JAXBElement<HtmlMarkupType>(_HtmlMarkupTypeI_QNAME, HtmlMarkupType.class, HtmlMarkupType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExcelStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "value", scope = Documents.Document.Fields.Field.class)
    public JAXBElement<ExcelStringType> createDocumentsDocumentFieldsFieldValue(ExcelStringType value) {
        return new JAXBElement<ExcelStringType>(_DocumentsDocumentFieldsFieldValue_QNAME, ExcelStringType.class, Documents.Document.Fields.Field.class, value);
    }

}
